{"ast":null,"code":"import _asyncToGenerator from \"F:\\\\SPAFORUNI\\\\SPA\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nexport class MainItemsStrategy {\n  constructor(_beer, paginationService) {\n    this._beer = _beer;\n    this.paginationService = paginationService;\n  }\n\n  getItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let items = []; // Simulate synchronous behavior by blocking until the promise is resolved\n\n      yield _this._beer.getBeersFromApi().then(itemsResponse => {\n        items = itemsResponse.slice(_this.paginationService.beersIndexStart, _this.paginationService.beersIndexEnd);\n      }).catch(error => {\n        console.error('Error fetching items:', error);\n        throw error;\n      });\n      return items;\n    })();\n  }\n\n}","map":{"version":3,"sources":["F:/SPAFORUNI/SPA/ClientApp/src/app/items-cards/design-patterns/strategies/main-items-strategy.ts"],"names":["MainItemsStrategy","constructor","_beer","paginationService","getItems","items","getBeersFromApi","then","itemsResponse","slice","beersIndexStart","beersIndexEnd","catch","error","console"],"mappings":";AAAA,OAAO,MAAMA,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,KAAD,EAAQC,iBAAR,EAA2B;AAClC,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,UAAIC,KAAK,GAAG,EAAZ,CADa,CAEb;;AACA,YAAM,KAAI,CAACH,KAAL,CAAWI,eAAX,GACDC,IADC,CACKC,aAAD,IAAmB;AACzBH,QAAAA,KAAK,GAAGG,aAAa,CAACC,KAAd,CAAoB,KAAI,CAACN,iBAAL,CAAuBO,eAA3C,EAA4D,KAAI,CAACP,iBAAL,CAAuBQ,aAAnF,CAAR;AACH,OAHK,EAIDC,KAJC,CAIKC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACA,cAAMA,KAAN;AACH,OAPK,CAAN;AAQA,aAAOR,KAAP;AAXa;AAYhB;;AAjB0B","sourcesContent":["export class MainItemsStrategy {\r\n    constructor(_beer, paginationService) {\r\n        this._beer = _beer;\r\n        this.paginationService = paginationService;\r\n    }\r\n    async getItems() {\r\n        let items = [];\r\n        // Simulate synchronous behavior by blocking until the promise is resolved\r\n        await this._beer.getBeersFromApi()\r\n            .then((itemsResponse) => {\r\n            items = itemsResponse.slice(this.paginationService.beersIndexStart, this.paginationService.beersIndexEnd);\r\n        })\r\n            .catch(error => {\r\n            console.error('Error fetching items:', error);\r\n            throw error;\r\n        });\r\n        return items;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}