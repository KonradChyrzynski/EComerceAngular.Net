{"ast":null,"code":"import _asyncToGenerator from \"F:\\\\SPAFORUNI\\\\SPA\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BeerService = /*#__PURE__*/(() => {\n  class BeerService {\n    constructor(http) {\n      this.http = http;\n      this.beers = [];\n      this.url = 'https://api.punkapi.com/v2/beers';\n    }\n\n    getArrayOfItems() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield _this.http.get(_this.url).toPromise();\n          _this.beers = response;\n          yield _this.fulfillMissingFields();\n        } catch (error) {\n          console.error('Error fetching beers:', error);\n          throw error;\n        }\n      })();\n    }\n\n    getItems() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this2.beers.length === 0) {\n          yield _this2.getArrayOfItems();\n        }\n\n        return _this2.beers;\n      })();\n    }\n\n    fulfillMissingFields() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        const pricePromises = [];\n\n        for (const bear of _this3.beers) {\n          bear.in_cart = false;\n          bear.favourite = false;\n\n          const pricePromise = _this3.fetchPriceById(bear.id).then(price => bear.price = price);\n\n          pricePromises.push(pricePromise);\n        }\n\n        yield Promise.all(pricePromises);\n      })();\n    }\n\n    fetchPriceById(id) {\n      return _asyncToGenerator(function* () {\n        //simulate db call\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const staticPrice = 15.0;\n            resolve(staticPrice);\n          }, 1000);\n        });\n      })();\n    }\n\n  }\n\n  BeerService.ɵfac = function BeerService_Factory(t) {\n    return new (t || BeerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BeerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BeerService,\n    factory: BeerService.ɵfac,\n    providedIn: 'root'\n  });\n  return BeerService;\n})();","map":null,"metadata":{},"sourceType":"module"}