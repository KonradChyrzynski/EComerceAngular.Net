{"ast":null,"code":"import _asyncToGenerator from \"F:\\\\Files\\\\SPA\\\\KonradChyrzynski-Full-Stack-Project-Angular-.NET\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BearService {\n  constructor(http) {\n    this.http = http;\n    this.bears = new Set();\n    this.url = 'https://api.punkapi.com/v2/beers';\n  }\n\n  getBeersFromApi() {\n    return this.http.get(this.url).subscribe(response => {\n      this.fetchPricesForBears().then(() => {\n        console.log(this.bears.map(b => b.price));\n      });\n      ;\n    });\n  }\n\n  fetchPricesForBears() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const pricePromises = [];\n\n      for (const bear of _this.bears) {\n        const pricePromise = _this.fetchPriceById(bear.id).then(price => bear.price = price);\n\n        pricePromises.push(pricePromise);\n      }\n\n      yield Promise.all(pricePromises);\n    })();\n  }\n\n  fetchPriceById(id) {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const staticPrice = 15.0;\n          resolve(staticPrice);\n        }, 1000);\n      });\n    })();\n  }\n\n}\n\nBearService.ɵfac = function BearService_Factory(t) {\n  return new (t || BearService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nBearService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BearService,\n  factory: BearService.ɵfac\n});","map":{"version":3,"sources":["F:/Files/SPA/KonradChyrzynski-Full-Stack-Project-Angular-.NET/ClientApp/src/app/service/bear.service.ts"],"names":["i0","i1","BearService","constructor","http","bears","Set","url","getBeersFromApi","get","subscribe","response","fetchPricesForBears","then","console","log","map","b","price","pricePromises","bear","pricePromise","fetchPriceById","id","push","Promise","all","resolve","setTimeout","staticPrice","ɵfac","BearService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACA,SAAKC,GAAL,GAAW,kCAAX;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAc,KAAKF,GAAnB,EAAwBG,SAAxB,CAAmCC,QAAD,IAAc;AACnD,WAAKC,mBAAL,GAA2BC,IAA3B,CAAgC,MAAM;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWW,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,KAAtB,CAAZ;AACH,OAFD;AAGA;AACH,KALM,CAAP;AAMH;;AACKN,EAAAA,mBAAmB,GAAG;AAAA;;AAAA;AACxB,YAAMO,aAAa,GAAG,EAAtB;;AACA,WAAK,MAAMC,IAAX,IAAmB,KAAI,CAACf,KAAxB,EAA+B;AAC3B,cAAMgB,YAAY,GAAG,KAAI,CAACC,cAAL,CAAoBF,IAAI,CAACG,EAAzB,EAChBV,IADgB,CACXK,KAAK,IAAIE,IAAI,CAACF,KAAL,GAAaA,KADX,CAArB;;AAEAC,QAAAA,aAAa,CAACK,IAAd,CAAmBH,YAAnB;AACH;;AACD,YAAMI,OAAO,CAACC,GAAR,CAAYP,aAAZ,CAAN;AAPwB;AAQ3B;;AACKG,EAAAA,cAAc,CAACC,EAAD,EAAK;AAAA;AACrB,aAAO,IAAIE,OAAJ,CAAaE,OAAD,IAAa;AAC5BC,QAAAA,UAAU,CAAC,MAAM;AACb,gBAAMC,WAAW,GAAG,IAApB;AACAF,UAAAA,OAAO,CAACE,WAAD,CAAP;AACH,SAHS,EAGP,IAHO,CAAV;AAIH,OALM,CAAP;AADqB;AAOxB;;AA9BoB;;AAgCzB3B,WAAW,CAAC4B,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAI9B,WAAV,EAAuBF,EAAE,CAACiC,QAAH,CAAYhC,EAAE,CAACiC,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAhC,WAAW,CAACiC,KAAZ,GAAoB,aAAcnC,EAAE,CAACoC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnC,WAAT;AAAsBoC,EAAAA,OAAO,EAAEpC,WAAW,CAAC4B;AAA3C,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class BearService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.bears = new Set();\r\n        this.url = 'https://api.punkapi.com/v2/beers';\r\n    }\r\n    getBeersFromApi() {\r\n        return this.http.get(this.url).subscribe((response) => {\r\n            this.fetchPricesForBears().then(() => {\r\n                console.log(this.bears.map(b => b.price));\r\n            });\r\n            ;\r\n        });\r\n    }\r\n    async fetchPricesForBears() {\r\n        const pricePromises = [];\r\n        for (const bear of this.bears) {\r\n            const pricePromise = this.fetchPriceById(bear.id)\r\n                .then(price => bear.price = price);\r\n            pricePromises.push(pricePromise);\r\n        }\r\n        await Promise.all(pricePromises);\r\n    }\r\n    async fetchPriceById(id) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                const staticPrice = 15.0;\r\n                resolve(staticPrice);\r\n            }, 1000);\r\n        });\r\n    }\r\n}\r\nBearService.ɵfac = function BearService_Factory(t) { return new (t || BearService)(i0.ɵɵinject(i1.HttpClient)); };\r\nBearService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BearService, factory: BearService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}