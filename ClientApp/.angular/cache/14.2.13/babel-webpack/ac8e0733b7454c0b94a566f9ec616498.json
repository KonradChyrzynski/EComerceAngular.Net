{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/48796/Desktop/Finals/SPA/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.items = new Set();\n    this.totalPrice = 0;\n  }\n\n  addItem(item) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.items.add(item);\n\n      _this.totalPrice += item.price;\n    })();\n  }\n\n  increaseTotalPrice() {}\n\n  decreaseTotalPrice() {}\n\n  removeItem(itemId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      for (let item of _this2.items) {\n        if (item.id === itemId) {\n          _this2.items.delete(item);\n\n          _this2.totalPrice -= item.price;\n          break;\n        }\n      }\n    })();\n  }\n\n  getItems() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => resolve(Array.from(_this3.items)));\n    })();\n  }\n\n}\n\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\n\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,mBAAP,CAA0B;EAK5BC;IAHA,aAAoB,IAAIC,GAAJ,EAApB;IACO,kBAAqB,CAArB;EAIN;;EAEKC,OAAO,CAACC,IAAD,EAAY;IAAA;;IAAA;MAErB,KAAI,CAACC,KAAL,CAAWC,GAAX,CAAeF,IAAf;;MACA,KAAI,CAACG,UAAL,IAAmBH,IAAI,CAACI,KAAxB;IAHqB;EAIxB;;EAEDC,kBAAkB,IAEjB;;EAEDC,kBAAkB,IAEjB;;EAEKC,UAAU,CAACC,MAAD,EAAe;IAAA;;IAAA;MAE3B,KAAI,IAAIR,IAAR,IAAgB,MAAI,CAACC,KAArB,EAA2B;QACvB,IAAGD,IAAI,CAACS,EAAL,KAAYD,MAAf,EAAsB;UAClB,MAAI,CAACP,KAAL,CAAWS,MAAX,CAAkBV,IAAlB;;UACA,MAAI,CAACG,UAAL,IAAmBH,IAAI,CAACI,KAAxB;UACA;QACH;MACJ;IAR0B;EAS9B;;EAEKO,QAAQ;IAAA;;IAAA;MACV,OAAO,IAAIC,OAAJ,CAAsBC,OAAD,IAAYA,OAAO,CAC3CC,KAAK,CAACC,IAAN,CAAW,MAAI,CAACd,KAAhB,CAD2C,CAAxC,CAAP;IADU;EAIb;;AAtC2B;;;mBAAnBL;AAAmB;;;SAAnBA;EAAmBoB,SAAnBpB,mBAAmB;EAAAqB,YAFhB","names":["ShoppingCartService","constructor","Set","addItem","item","items","add","totalPrice","price","increaseTotalPrice","decreaseTotalPrice","removeItem","itemId","id","delete","getItems","Promise","resolve","Array","from","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\48796\\Desktop\\Finals\\SPA\\ClientApp\\src\\app\\service\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IBeer } from '../IBeer';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class ShoppingCartService{\r\n    \r\n    items: Set<IBeer> = new Set<IBeer>(); \r\n    public totalPrice: number = 0;\r\n\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    async addItem(item: IBeer): Promise<void>\r\n    {\r\n        this.items.add(item);\r\n        this.totalPrice += item.price as number;\r\n    }\r\n\r\n    increaseTotalPrice(){\r\n\r\n    }\r\n\r\n    decreaseTotalPrice(){\r\n\r\n    }\r\n\r\n    async removeItem(itemId: number): Promise<void>\r\n    {\r\n        for(let item of this.items){\r\n            if(item.id === itemId){\r\n                this.items.delete(item);\r\n                this.totalPrice -= item.price as number;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async getItems(): Promise<IBeer[]>{\r\n        return new Promise<IBeer[]>((resolve) =>resolve(\r\n            Array.from(this.items)\r\n            ));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}