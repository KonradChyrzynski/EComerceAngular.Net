{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/48796/Desktop/Finals/SPA/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport class MainItemsStrategy {\n  constructor(_beer, paginationService) {\n    this._beer = _beer;\n    this.paginationService = paginationService;\n  }\n\n  getItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let items = []; // Simulate synchronous behavior by blocking until the promise is resolved\n\n      yield _this._beer.getItems().then(itemsResponse => {\n        items = itemsResponse.slice(_this.paginationService.beersIndexStart, _this.paginationService.beersIndexEnd);\n      }).catch(error => {\n        console.error('Error fetching items:', error);\n        throw error;\n      });\n      return items;\n    })();\n  }\n\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,iBAAP,CAAwB;EAC1BC,YAAoBC,KAApB,EAAgDC,iBAAhD,EAAoF;IAAhE;IAA4B;EAAwC;;EAElFC,QAAQ;IAAA;;IAAA;MACV,IAAIC,KAAK,GAAY,EAArB,CADU,CAGV;;MACA,MAAM,KAAI,CAACH,KAAL,CAAWE,QAAX,GACHE,IADG,CACGC,aAAD,IAA2B;QAC/BF,KAAK,GAAGE,aAAa,CAACC,KAAd,CAAoB,KAAI,CAACL,iBAAL,CAAuBM,eAA3C,EAA4D,KAAI,CAACN,iBAAL,CAAuBO,aAAnF,CAAR;MACD,CAHG,EAIHC,KAJG,CAIGC,KAAK,IAAG;QACbC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;QACA,MAAMA,KAAN;MACD,CAPG,CAAN;MASA,OAAOP,KAAP;IAbU;EAcX;;AAjBuB","names":["MainItemsStrategy","constructor","_beer","paginationService","getItems","items","then","itemsResponse","slice","beersIndexStart","beersIndexEnd","catch","error","console"],"sourceRoot":"","sources":["C:\\Users\\48796\\Desktop\\Finals\\SPA\\ClientApp\\src\\app\\items-cards\\design-patterns\\strategies\\main-items-strategy.ts"],"sourcesContent":["import { IBeer } from \"src/app/IBeer\";\r\nimport { IItemsStrategy } from \"./interfaces/IItemsStrategy\";\r\nimport { PaginationService } from \"src/app/service/pagination.sevice\";\r\nimport { BeerService } from \"src/app/service/beer.service\";\r\n\r\nexport class MainItemsStrategy implements IItemsStrategy { \r\n    constructor(private _beer: BeerService, private paginationService: PaginationService ){}\r\n\r\n    async getItems(): Promise<IBeer[]> {\r\n        let items: IBeer[] = [];\r\n      \r\n        // Simulate synchronous behavior by blocking until the promise is resolved\r\n        await this._beer.getItems()\r\n          .then((itemsResponse: IBeer[]) => {\r\n            items = itemsResponse.slice(this.paginationService.beersIndexStart, this.paginationService.beersIndexEnd);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching items:', error);\r\n            throw error;\r\n          });\r\n      \r\n        return items;\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}